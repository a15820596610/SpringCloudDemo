server:
  port: 8705
spring:
  application:
    name: zuul
zuul:
  routes:
    #标识你服务的名字，这里可以自己定义，一般方便和规范来讲还是跟自己服务的名字一样
    client1:
      #服务映射的路径，通过这路径就可以从外部访问你的服务了，目的是为了不爆露你机器的IP，面向服务的路由了，给你选一个可用的出来，
      #这里zuul是自动依赖hystrix，ribbon的，不是面向单机
      path: /Client1Test/**
      #这里一定要是你Eureka注册中心的服务的名称，是所以这里配置serviceId因为跟eureka结合了，如果单独使用zuul,那么就必须写自己机器的IP了，
      #如url:http://localhost:8080/  这样的不好就是写死IP了，万一这IP挂了，这高可用性，服务注册那套东西就用不起来了
      serviceId: client1
  #全局配置限流
  ratelimit:
    enabled: true
    default-policy:
      limit: 1 #可选- 每个刷新时间窗口对应的请求数量限制
      quota: 1000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
      refresh-interval: 10
      ##针对 IP 进行限流，不影响其他 IP
      type: url


hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 280000

ribbon:
  MaxAutoRetries: 3
  MaxAutoRetriesNextServer: 0
  ReadTimeout: 5000
  ConnectTimeout: 2000

eureka:
  #客户端
  client:
    #注册中心地址
    service-url:
      defaultZone: http://127.0.0.1:8700/eureka




